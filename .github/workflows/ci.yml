name: LAPIS-SILO

on:
  push:
  pull_request:

env:
  DOCKER_IMAGE_NAME: ghcr.io/GenSpectrum/LAPIS-SILO

jobs:
  dockerImage:
    name: Build Docker Image
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  unitTests:
    name: Run unit tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Wait for Docker Image
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: 'Build Docker Image'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ steps.meta.outputs.tags }}
          run: ./silo_test

  endToEndTests:
    name: Run End To End Tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: npm install
        run: cd endToEndTests && npm ci
      - name: Check Format
        run: cd endToEndTests && npm run check-format
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: type=ref,event=branch
      - name: Wait for Docker Image
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: 'Build Docker Image'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Start Docker Container
        run: docker run -p 8080:8080 -d ${{ steps.meta.outputs.tags }}
      - name: Run Tests
        run: cd endToEndTests && SILO_URL=localhost:8080 npm run test